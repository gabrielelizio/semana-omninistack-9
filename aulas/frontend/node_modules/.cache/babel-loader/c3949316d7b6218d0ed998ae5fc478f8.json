{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\gabri\\\\Documents\\\\semana-omninistack-9\\\\aulas\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\semana-omninistack-9\\\\aulas\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './style.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        requests = _useState4[0],\n        setRequests = _useState4[1];\n\n  const user_id = localStorage.getItem('user');\n  const socket = useMemo(() => socketio('http://localhost:3333', {\n    query: {\n      user_id\n    }\n  }), [user_id]);\n  useEffect(() => {\n    socket.on('booking_request', data => {\n      setRequests([...requests, data]);\n    });\n  }, [requests, socket]);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get('/dashboard', {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data);\n    }\n\n    loadSpots();\n  }, []); // Array vazio = vai executar apenas uma vez.\n\n  async function handleAccept(id) {\n    await api.post(\"/bookings/\".concat(id, \"/approvals\"));\n    setRequests(requests.filter(request => requests._id !== id));\n  }\n\n  function handleReject(id) {}\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, requests.map(request => React.createElement(\"li\", {\n    key: request._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, request.user.email), \" est\\xE1 solicitando uma reserva em \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, request.spot.company), \" para a data:\", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, request.data)), React.createElement(\"button\", {\n    className: \"accept\",\n    onClick: () => {\n      handleAccept(request._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" ACEITAR \"), React.createElement(\"button\", {\n    className: \"reject\",\n    onClick: () => {\n      handleReject(request._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" REJEITAR \")))), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, Spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: \"url(\".concat(spot.thumbnail_url, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, spot.price ? \"R$\".concat(spot.price, \"/dia\") : 'GRATUITO')))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"  Cadastrar novo Spot\")));\n}","map":{"version":3,"sources":["C:\\Users\\gabri\\Documents\\semana-omninistack-9\\aulas\\frontend\\src\\pages\\Dashboard\\index.js"],"names":["React","useEffect","useState","useMemo","Link","socketio","api","Dashboard","Spots","setSpots","requests","setRequests","user_id","localStorage","getItem","socket","query","on","data","loadSpots","response","get","headers","handleAccept","id","post","filter","request","_id","handleReject","map","user","email","spot","company","backgroundImage","thumbnail_url","price"],"mappings":"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","sourcesContent":["import React, {useEffect,useState, useMemo} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport socketio from 'socket.io-client'\r\n\r\nimport api from '../../services/api';\r\n\r\nimport './style.css';\r\n\r\nexport default function Dashboard(){\r\n  const [Spots, setSpots] = useState([]);\r\n\r\n  const [requests, setRequests] = useState([])\r\n\r\n\r\n  const user_id = localStorage.getItem('user')\r\n  const socket = useMemo(() =>socketio('http://localhost:3333',{\r\n    query: { user_id },\r\n  }),[user_id]);\r\n\r\n  useEffect(()=> {\r\n\r\n    socket.on('booking_request',data=>{\r\n      setRequests([...requests,data])      \r\n    })\r\n  },[requests, socket])\r\n\r\n  useEffect(() => {\r\n     async function loadSpots(){\r\n      const user_id = localStorage.getItem('user')\r\n      const response = await  api.get('/dashboard',{\r\n        headers: {user_id}\r\n      });\r\n      setSpots(response.data);\r\n    }\r\n\r\n    loadSpots();\r\n\r\n  },[]); // Array vazio = vai executar apenas uma vez.\r\n\r\n  async function handleAccept(id){\r\n    await api.post(`/bookings/${id}/approvals`);\r\n\r\n    setRequests(requests.filter(request => requests._id !== id));\r\n  }\r\n  \r\n  function handleReject(id){\r\n    \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"notifications\">\r\n        {requests.map(request => (\r\n          <li key={request._id}>\r\n            <p>\r\n              <strong>{request.user.email}</strong> est√° solicitando uma \r\n              reserva em <strong>{request.spot.company}</strong> para a data: \r\n              <strong>{request.data}</strong>\r\n            </p>\r\n            <button className=\"accept\" onClick={()=>{handleAccept(request._id)}}> ACEITAR </button>\r\n            <button className=\"reject\" onClick={()=>{handleReject(request._id)}} > REJEITAR </button>\r\n\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className=\"spot-list\">\r\n        {Spots.map(spot => (\r\n          <li key={spot._id}>\r\n            <header style={{backgroundImage: `url(${spot.thumbnail_url})`}} />\r\n            <strong>{spot.company}</strong>\r\n            <span>{spot.price ? `R$${spot.price}/dia`: 'GRATUITO'}</span>\r\n          </li>\r\n        ))}\r\n\r\n      </ul>\r\n          <Link to =\"/new\">\r\n          <button className=\"btn\">  Cadastrar novo Spot</button>\r\n          </Link>\r\n    </>\r\n  )\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}