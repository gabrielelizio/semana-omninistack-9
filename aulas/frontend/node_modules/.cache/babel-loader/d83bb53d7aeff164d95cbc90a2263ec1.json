{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\gabri\\\\Documents\\\\semana-omninistack-9\\\\aulas\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\semana-omninistack-9\\\\aulas\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './style.css';\nimport { request } from 'http';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        requests = _useState4[0],\n        setRequests = _useState4[1];\n\n  useEffect(() => {\n    const user_id = localStorage.getItem('user');\n    const socket = socketio('http://localhost:3333', {\n      query: {\n        user_id\n      }\n    });\n    socket.on('booking_request', data => {\n      console.log(data);\n    });\n  }, []);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get('/dashboard', {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data);\n    }\n\n    loadSpots();\n  }, []); // Array vazio = vai executar apenas uma vez.\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, requests.map(requests => React.createElement(\"li\", {\n    key: requests._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, requests.user.email), \" est\\xE1 solicitando uma reserva em \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, requests.spot.company), \" para a data:\", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, request.date)), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" ACEITAR \"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" REJEITAR \")))), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, Spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: \"url(\".concat(spot.thumbnail_url, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, spot.price ? \"R$\".concat(spot.price, \"/dia\") : 'GRATUITO')))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"  Cadastrar novo Spot\")));\n}","map":{"version":3,"sources":["C:\\Users\\gabri\\Documents\\semana-omninistack-9\\aulas\\frontend\\src\\pages\\Dashboard\\index.js"],"names":["React","useEffect","useState","Link","socketio","api","request","Dashboard","Spots","setSpots","requests","setRequests","user_id","localStorage","getItem","socket","query","on","data","console","log","loadSpots","response","get","headers","map","_id","user","email","spot","company","date","backgroundImage","thumbnail_url","price"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport socketio from 'socket.io-client'\r\n\r\nimport api from '../../services/api';\r\n\r\nimport './style.css';\r\nimport { request } from 'http';\r\n\r\nexport default function Dashboard(){\r\n  const [Spots, setSpots] = useState([]);\r\n\r\n  const [requests, setRequests] =useState([]);\r\n  useEffect(()=> {\r\n    const user_id = localStorage.getItem('user')\r\n\r\n    const socket = socketio('http://localhost:3333',{\r\n      query: { user_id },\r\n    });\r\n\r\n    socket.on('booking_request',data=>{\r\n      console.log(data);\r\n      \r\n    })\r\n  },[])\r\n\r\n\r\n  useEffect(() => {\r\n     async function loadSpots(){\r\n      const user_id = localStorage.getItem('user')\r\n      const response = await  api.get('/dashboard',{\r\n        headers: {user_id}\r\n      });\r\n      setSpots(response.data);\r\n    }\r\n\r\n    loadSpots();\r\n\r\n  },[]); // Array vazio = vai executar apenas uma vez.\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"notifications\">\r\n        {requests.map(requests => (\r\n          <li key={requests._id}>\r\n            <p>\r\n              <strong>{requests.user.email}</strong> est√° solicitando uma \r\n              reserva em <strong>{requests.spot.company}</strong> para a data: \r\n              <strong>{request.date}</strong>\r\n            </p>\r\n            <button> ACEITAR </button>\r\n            <button> REJEITAR </button>\r\n\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className=\"spot-list\">\r\n        {Spots.map(spot => (\r\n          <li key={spot._id}>\r\n            <header style={{backgroundImage: `url(${spot.thumbnail_url})`}} />\r\n            <strong>{spot.company}</strong>\r\n            <span>{spot.price ? `R$${spot.price}/dia`: 'GRATUITO'}</span>\r\n          </li>\r\n        ))}\r\n\r\n      </ul>\r\n          <Link to =\"/new\">\r\n          <button className=\"btn\">  Cadastrar novo Spot</button>\r\n          </Link>\r\n    </>\r\n  )\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}